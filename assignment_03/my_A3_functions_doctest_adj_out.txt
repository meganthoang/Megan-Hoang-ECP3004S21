#--------------------------------------------------
# Importing function definitions
# Doctest for script my_A3_functions.py:
#--------------------------------------------------
#--------------------------------------------------
Testing my Examples for Exercise 1.
#--------------------------------------------------
Exercise 1, Example 1:
Evaluating quad_roots_1(0.5, 2, -5, -3)
Expected: [-0.5, 3]
Got: [3.0, -0.5]
#--------------------------------------------------
Exercise 1, Example 2:
Evaluating quad_roots_1(-1.15, 5, -2, -9)
Expected: [-1.15, 1.55]
Got: [1.5564659966250536, -1.1564659966250537]
#--------------------------------------------------
Exercise 1, Example 3:
Evaluating quad_roots_1(-2.54, 1, -1, -9)
Expected: [-2.54, 3.54]
Got: [3.5413812651491097, -2.5413812651491097]
#--------------------------------------------------
Testing my Examples for Exercise 2.
#--------------------------------------------------
Exercise 2, Example 1:
Evaluating quad_roots_real(0.5, 2, -5, -3)
Expected: [-0.5, 3]
Got: [3.0, -0.5]
#--------------------------------------------------
Exercise 2, Example 2:
Evaluating quad_roots_real(-1.15, 5, -2, -9)
Expected: [-1.15, 1.55]
Got: [1.5564659966250536, -1.1564659966250537]
#--------------------------------------------------
Exercise 2, Example 3:
Evaluating quad_roots_real(-2.54, 1, -1, -9)
Expected: [-2.54, 3.54]
Got: [3.5413812651491097, -2.5413812651491097]
#--------------------------------------------------
Testing my Examples for Exercise 3.
#--------------------------------------------------
Exercise 3, Example 1:
Evaluating utility_positive(1, 2, 0.5)
Expected: 1.41
Got: 1.41
#--------------------------------------------------
Exercise 3, Example 2:
Evaluating utility_positive(5, 7, 0.25)
Expected: 6.44
Got: 6.44
#--------------------------------------------------
Exercise 3, Example 3:
Evaluating utility_positive(10, 32, 0.01)
Expected: x is negative + None
x is negative
Got: None
#--------------------------------------------------
Testing my Examples for Exercise 4.
#--------------------------------------------------
Exercise 4, Example 1:
Evaluating logit_like(0, 1, 2, 0.5)
Expected: 1.08
Got: -2.5788897342925496
#--------------------------------------------------
Exercise 4, Example 2:
Evaluating logit_like(6, 3, 2, 9)
Expected: None
Got: None
#--------------------------------------------------
Exercise 4, Example 3:
Evaluating logit_like(10, 3, 8, 9)
Expected: None
Got: None
#--------------------------------------------------
# Testing with doctest module
#--------------------------------------------------
**********************************************************************
File "assignment_03/my_A3_functions_doctest.py", line ?, in __main__.logit_like
Failed example:
    logit_like(0, 1, 2, 0.5)
Expected:
    1.08
Got:
    -2.5788897342925496
**********************************************************************
File "assignment_03/my_A3_functions_doctest.py", line ?, in __main__.logit_like
Failed example:
    logit_like(6, 3, 2, 9)
Expected:
    None
Got nothing
**********************************************************************
File "assignment_03/my_A3_functions_doctest.py", line ?, in __main__.logit_like
Failed example:
    logit_like(10, 3, 8, 9)
Expected:
    None
Got nothing
**********************************************************************
File "assignment_03/my_A3_functions_doctest.py", line 38, in __main__.quad_roots_1
Failed example:
    quad_roots_1(0.5, 2, -5, -3)
Expected:
    [-.5, 3]
Got:
    [3.0, -0.5]
**********************************************************************
File "assignment_03/my_A3_functions_doctest.py", line 40, in __main__.quad_roots_1
Failed example:
    quad_roots_1(-1.15, 5, -2, -9)
Expected:
    [-1.15, 1.55]
Got:
    [1.5564659966250536, -1.1564659966250537]
**********************************************************************
File "assignment_03/my_A3_functions_doctest.py", line 42, in __main__.quad_roots_1
Failed example:
    quad_roots_1(-2.54, 1, -1, -9)
Expected:
    [-2.54, 3.54]    
Got:
    [3.5413812651491097, -2.5413812651491097]
**********************************************************************
File "assignment_03/my_A3_functions_doctest.py", line ?, in __main__.quad_roots_real
Failed example:
    quad_roots_real(0.5, 2, -5, -3)
Expected:
    [-.5, 3]
Got:
    [3.0, -0.5]
**********************************************************************
File "assignment_03/my_A3_functions_doctest.py", line ?, in __main__.quad_roots_real
Failed example:
    quad_roots_real(-1.15, 5, -2, -9)
Expected:
    [-1.15, 1.55]
Got:
    [1.5564659966250536, -1.1564659966250537]
**********************************************************************
File "assignment_03/my_A3_functions_doctest.py", line ?, in __main__.quad_roots_real
Failed example:
    quad_roots_real(-2.54, 1, -1, -9)
Expected:
    [-2.54, 3.54]    
Got:
    [3.5413812651491097, -2.5413812651491097]
**********************************************************************
File "assignment_03/my_A3_functions_doctest.py", line ?, in __main__.utility_positive
Failed example:
    utility_positive(1, 2, 0.5)
Expected:
    1.41
Got:
    1.4142135623730951
**********************************************************************
File "assignment_03/my_A3_functions_doctest.py", line ?, in __main__.utility_positive
Failed example:
    utility_positive(5, 7, 0.25)
Expected:
    6.44
Got:
    6.435259006574429
**********************************************************************
File "assignment_03/my_A3_functions_doctest.py", line ?, in __main__.utility_positive
Failed example:
    utility_positive(-10, 32, 0.01)
Expected:
    None + "x is negative"
Got:
    x is negative
**********************************************************************
4 items had failures:
   3 of   3 in __main__.logit_like
   3 of   3 in __main__.quad_roots_1
   3 of   3 in __main__.quad_roots_real
   3 of   3 in __main__.utility_positive
***Test Failed*** 12 failures.
TestResults(failed=12, attempted=12)
#--------------------------------------------------
